spring.application.name=Inventory

# service Register  into eureka client
eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true

# Enable Actuator Metrics
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true

# JPA & MySQL config (Use Docker service name "database")
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://database:3306/ABC_Database?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=*8MA1SW#RI@%
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

server.port=8081
server.servlet.context-path=/inventory-service

#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=inventory
#spring.kafka.consumer.auto-offset-reset=earliest
#
#
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=inventory
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.template.default-topic=order_topic
